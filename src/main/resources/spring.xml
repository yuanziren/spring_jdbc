<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">


<!-- 开启包扫描 -->
    <context:component-scan base-package="com.yuanziren"/>
    <!-- 开启aop代理 -->
    <aop:aspectj-autoproxy/>
    <!-- 加载properties 配置文件 -->
    <context:property-placeholder location="db.properties" />
    <!-- 配置c3p0 数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- jdbcTemplate 配置 -->
    <bean id="jdbcTemplate"  class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>




    <!-- 事务管理器定义 -->
    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 配置通知 -->
    <!--
    tx:method的属性:
      * name 是必须的,表示与事务属性关联的方法名(业务方法名),对切入点进行细化。通配符（*）可以用来指定一批关联到相同的事务属性的方法。
        如：'get*'、'handle*'、'on*Event'等等.
       propagation 不是必须的 ，默认值是REQUIRED
            表示事务传播行为, 包括REQUIRED,SUPPORTS,MANDATORY,REQUIRES_NEW,NOT_SUPPORTED,NEVER,NESTED
       isolation  不是必须的 默认值DEFAULT
            表示事务隔离级别(数据库的隔离级别)
       timeout 不是必须的 默认值-1(永不超时)
            表示事务超时的时间（以秒为单位）
       read-only 不是必须的 默认值false不是只读的
            表示事务是否只读
       rollback-for 不是必须的
            表示将被触发进行回滚的 Exception(s)；以逗号分开。
            如：'com.foo.MyBusinessException,ServletException'
       no-rollback-for 不是必须的
            表示不被触发进行回滚的 Exception(s)；以逗号分开。
            如：'com.foo.MyBusinessException,ServletException'
    任何 RuntimeException 将触发事务回滚
    -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <!--匹配以save开头的service方法均加入事物-->
            <tx:method name="save*" propagation="REQUIRED" />
            <!--匹配以del开头的service方法均加入事物-->
            <tx:method name="del*" propagation="REQUIRED" />
            <!--匹配以update开头的service方法均加入事物-->
            <tx:method name="update*" propagation="REQUIRED" />
            <!--匹配以query开头的service方法事物为只读模式-->
            <tx:method name="query*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <!-- aop 切面定义 -->
    <aop:config>
        <aop:pointcut expression="execution( * com.yuanziren.service..*.*(..) )" id="cut" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="cut" />
    </aop:config>

    <!-- 开启注解事务 -->
    <tx:annotation-driven transaction-manager="txManager"/>


</beans>